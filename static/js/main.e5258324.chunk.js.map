{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","handleSelectedTodo","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","statusFilter","setStatusFilter","titleFilter","setTitleFilter","value","onChange","e","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setSelectedTodo","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","data","href","email","name","App","setTodos","displayTodos","useMemo","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5258324.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleSelectedTodo: (Todo: Todo) => void\n  selectedTodo: Todo | null\n};\n\nexport const TodoList: React.FC<Props> = (\n  { todos, handleSelectedTodo, selectedTodo },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed\n              && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={\n              todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'\n            }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => handleSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={selectedTodo?.id !== todo.id\n                  ? 'far fa-eye'\n                  : 'far fa-eye-slash'}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n    </tbody>\n  </table>\n);\n","export type FilterOption = 'all' | 'active' | 'completed';\n\ntype Props = {\n  statusFilter: FilterOption,\n  setStatusFilter: (option: FilterOption) => void,\n  titleFilter: string,\n  setTitleFilter: (part: string) => void\n\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    statusFilter,\n    setStatusFilter,\n    titleFilter,\n    setTitleFilter,\n  },\n) => (\n\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={statusFilter}\n          onChange={(e) => {\n            setStatusFilter(e.target.value as FilterOption);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        value={titleFilter}\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={e => setTitleFilter(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {\n        titleFilter\n        && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setTitleFilter('')}\n            />\n          </span>\n\n        )\n      }\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\n\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = (\n  { selectedTodo, setSelectedTodo },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(selectedTodo.userId).then((data) => {\n      setUser(data);\n      setIsLoading(false);\n    });\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { FilterOption, TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { Todo } from './types/Todo';\n\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const [statusFilter, setStatusFilter] = useState<FilterOption>('all');\n  const [titleFilter, setTitleFilter] = useState<string>('');\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then((data) => {\n        setTodos(data);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const displayTodos = useMemo(() => {\n    return todos.filter(todo => {\n      if (!todo.title.toLowerCase().includes(titleFilter.toLowerCase())) {\n        return false;\n      }\n\n      if (statusFilter === 'active' && todo.completed) {\n        return false;\n      }\n\n      if (statusFilter === 'completed' && !todo.completed) {\n        return false;\n      }\n\n      return true;\n    });\n  }, [titleFilter, statusFilter, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                statusFilter={statusFilter}\n                setStatusFilter={setStatusFilter}\n                titleFilter={titleFilter}\n                setTitleFilter={setTitleFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading !== false\n                ? <Loader />\n                : <TodoList todos={displayTodos} handleSelectedTodo={setSelectedTodo} selectedTodo={selectedTodo} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} setSelectedTodo={setSelectedTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}